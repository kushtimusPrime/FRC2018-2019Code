// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6964.FRCBearBotsTrial2.subsystems;

import org.usfirst.frc6964.FRCBearBotsTrial2.RobotMap;
import org.usfirst.frc6964.FRCBearBotsTrial2.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Joystick;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveSubsystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController bottomLeft = RobotMap.driveSubsystemBottomLeft;
    private final SpeedController topLeft = RobotMap.driveSubsystemTopLeft;
    private final SpeedControllerGroup left = RobotMap.driveSubsystemLeft;
    private final SpeedController bottomRight = RobotMap.driveSubsystemBottomRight;
    private final SpeedController topRight = RobotMap.driveSubsystemTopRight;
    private final SpeedControllerGroup right = RobotMap.driveSubsystemRight;
    private final DifferentialDrive differentialDrive1 = RobotMap.driveSubsystemDifferentialDrive1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new ArcadeDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void takeJoystickInput(Joystick joystick) {
    	double sensitivity=((joystick.getThrottle()*-1)/8)+0.875;
    	differentialDrive1.arcadeDrive(joystick.getY()*sensitivity, joystick.getX()*sensitivity);
    }
    
    public void takeXJoystickAxisOnly(Joystick joystick) {
    	double sensitivity=((joystick.getThrottle()*-1)/8)+0.875;
    	differentialDrive1.arcadeDrive(0, joystick.getX()*sensitivity);
    }
    public void takeYJoystickAxisOnly(Joystick joystick) {
    	double sensitivity=((joystick.getThrottle()*-1)/8)+0.875;
    	differentialDrive1.arcadeDrive(joystick.getY()*sensitivity, 0);
    }
    
    public void stop() {
    	differentialDrive1.arcadeDrive(0, 0);
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

